#! /usr/bin/python

### buildts: build a NetCDF (*.nc) file and associated time series metadata (*.ts.xml) file
###          from a bunch of individual rasters
### 
### usage: buildts [-k] [-t TEMPDIR] [-D OUTPUTDIR] -o OUTPUT RASTERFILE [...]
###
###    -k means don't delete intermediate NetCDF files
###
### Files named OUTPUT.nc and OUTPUT.ts.xml will be written to OUTPUTDIR.  If the -D
### option is not present, OUTPUTDIR defaults to the current directory.
###
### by Mark Phillips
### mphillip@unca.edu
### Wed Aug 18 02:36:35 2010

import sys, getopt, os, re, datetime

def system(cmd):
    print "EXECUTING: %s" % cmd
    return os.system(cmd)

# function to convert a (year,jdate) pair to a YYYYMMDD string:
def YJ2YYYYMMDD(year, jdate):
    d = datetime.date.fromordinal( datetime.date(year,1,1).toordinal() + jdate )
    return "%04d%02d%02d" % (d.year, d.month, d.day)

###
### process command line arguments and filenames
###

opts, args = getopt.getopt(sys.argv[1:],
                           "kt:o:D:",
                           ["keep", "temp=", "output=", "outputdir="]
                           )

files = sorted(args)

optKeep    = False
tempdir    = 'buildts.temp'
output     = ''
outputdir  = os.getcwd()
outputdirSet = False
tempdirSet = False

for opt, arg in opts:
    if opt in ('-k', '--keep'):
        optKeep = True
    elif opt in ('-t', '--temp'):
        tempdir = arg
        tempdirSet = True
    elif opt in ('-o', '--output'):
        output = arg
    elif opt in ('-D', '--outputdir'):
        outputdir = arg
        outputdirSet = True

outputdir = os.path.abspath(outputdir)

if outputdirSet and not tempdirSet:
    tempdir = outputdir + "/buildts.temp"

if output == '':
    print "You must specify an output file with the -o or --output option."
    sys.exit(2)

ncfile = outputdir + "/" + output + ".nc"
tsfile = outputdir + "/" + output + ".ts.xml"

ncfileexists = False
if os.path.exists(ncfile):
    print "Refusing to overwrite file %s." % ncfile
    ncfileexists = True

if os.path.exists(tsfile):
    print "Refusing to overwrite file %s." % tsfile
    sys.exit(2)

if ncfileexists:
    sys.exit(2)

if os.path.exists(tempdir) and not os.path.isdir(tempdir):
    print "%s exists and is not a directory" % tempdir
    sys.exit(2)

###
### Create temp dir if it does not yet exist
###

tempdir_did_not_exist = False
if not os.path.exists(tempdir):
    os.mkdir(tempdir)
    tempdir_did_not_exist = True

###
### Convert original input files to NetCDF format in the tmep dir,
### skipping any that already exist
###

ncfiles = []
for file in files:
    base = re.sub(r'\.[^\.]+$', '', os.path.basename(file))
    nfile = "%s.nc" % (base)
    npath = "%s/%s" % (tempdir,nfile)
    ncfiles.append(nfile)
    if os.path.exists(nfile):
        print "Skipping creation of %s because it already exists" % nfile
    else:
    	print "Creating %s" % nfile
        system("gdal_translate -of netCDF %s %s" % (file, npath))

###
### Concatenate all the NetCDF files into one big whopper of a NetCDF file (the main output file)
###
system("cd %s ; ncecat %s %s" % (tempdir, ' '.join(ncfiles), ncfile))

###
### Figure out the date associated with each intput file, and write all the dates
### into the output "ts.xml" file
###
f_tsfile = open(tsfile, "w")
f_tsfile.write("<timepoints>\n")
for nfile in ncfiles:
    # set datesubstring to the longest numeric substring of the file name
    numstrings = sorted(re.findall(r'\d+', nfile), key=len)
    datesubstring = numstrings[len(numstrings)-1]
    # assume datesubstring is in the format YYYYJJJ, and convert it to YYYYMMDD
    yyyy = int( datesubstring[0:4] )
    jjj = int( datesubstring[4:8] )
    yyyymmdd = YJ2YYYYMMDD(yyyy, jjj)
    f_tsfile.write("  <timepoint>%s</timepoint>\n" % yyyymmdd)
f_tsfile.write("</timepoints>\n")
f_tsfile.close();
print "Wrote %s." % tsfile

if not optKeep:
    for nfile in ncfiles:
        system("/bin/rm -f %s/%s*" % (tempdir,nfile))
    if tempdir_did_not_exist:
        system("rmdir %s" % tempdir)
